# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: bberg-turnoffrds
stage: dev # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: dotnetcore2.1
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "rds:DescribeDBInstances"
         - "rds:ListTagsForResource"
         - "rds:startdbinstance"
         - "rds:stopdbinstance"
       Resource:
         - "*"
         
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  artifact: bin/release/netcoreapp2.1/deploy-package.zip
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  keepoff:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::KeepOff
    events:
      - http:
          path: rds/keepoff
          method: post
  status:
      handler: CsharpHandlers::AwsDotnetCsharp.Handler::Status
      events:
      - http:
          path: rds/status
          method: get
  turnon:
      handler: CsharpHandlers::AwsDotnetCsharp.Handler::TurnOn
      events:
      - http:
          path: rds/turnon
          method: post
    

#    Define function environment variables here
#    environment:
#      variable2: value2

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
